{"version":3,"sources":["images/Navbar image.png","About.js","Home.js","Contact.js","Projects.js","Navbar.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","Home","Contact","Projects","Navbar","src","navbarImage","alt","width","to","class","Footer","id","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,0C,gKCc5BC,MAXf,WACE,OACE,yBAAKC,UAAU,OACb,4CCQSC,MAXf,WACE,OACE,yBAAKD,UAAU,YACb,yCACA,ibCKSE,MATf,WACE,OACE,yBAAKF,UAAU,OACb,8CCMSG,MATf,WACE,OACE,6BACE,+C,iBC+BSC,MAhCf,WACE,OACE,6BACE,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,YAAYK,IAAKC,IAAaC,IAAI,QAAQC,MAAM,QAC/D,yBAAKR,UAAU,aACb,kBAAC,IAAD,CAAMS,GAAG,KACL,0CAGN,yBAAKT,UAAU,aACb,kBAAC,IAAD,CAAMS,GAAI,UACN,2CAGN,yBAAKT,UAAU,aACb,kBAAC,IAAD,CAAMS,GAAG,YACL,6CAGN,yBAAKT,UAAU,aACb,kBAAC,IAAD,CAAMS,GAAG,aACL,+CAIN,yBAAKC,MAAM,UClBJC,MAVf,WACE,OACE,4BAAQC,GAAG,eACP,gECyBOC,MArBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKb,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,KAAK,cAAcC,UAAWd,IACrC,kBAAC,IAAD,CAAOa,KAAK,IAAIE,OAAK,EAACD,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,SAASC,UAAWhB,IAChC,kBAAC,IAAD,CAAOe,KAAK,YAAYC,UAAWZ,IACnC,kBAAC,IAAD,CAAOW,KAAK,WAAWC,UAAWb,KAEpC,kBAAC,EAAD,SCXYe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.ccf717cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Navbar image.628af4e3.png\";","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>About Page</h1>\r\n        \r\n      \r\n      \r\n    </div> //App\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"homePage\">\r\n      <h1>Home Page</h1>\r\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui illum quam error libero aliquam sunt id ullam nam esse eum tempora, enim laudantium cum minus neque. Rerum quia ad magni!\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad rem distinctio quis incidunt debitis qui, pariatur vitae modi laborum possimus ipsa eaque ducimus earum! At consectetur nulla accusantium doloribus deserunt!</p>\r\n      \r\n    </div> //App\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Contact Page</h1>\r\n      \r\n    </div> //App\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Projects() {\r\n  return (\r\n    <div>\r\n      <h1>Projects Page</h1>\r\n      \r\n    </div> //App\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport navbarImage from './images/Navbar image.png';\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-links\">\r\n        <img className=\"navbarImg\" src={navbarImage} alt=\"Error\" width=\"150\"/>\r\n        <div className=\"nav-items\">\r\n          <Link to='/'>\r\n              <button>Home</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-items\">\r\n          <Link to ='/about'>\r\n              <button>About</button>   \r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-items\">  \r\n          <Link to='/contact'>\r\n              <button>Contact</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-items\">\r\n          <Link to='/projects'>\r\n              <button>Projects</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n        <div class=\"clr\"></div>\r\n    </nav>\r\n   \r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer id=\"main-footer\">\r\n        <p>\r\n            Copyright &copy; 2020, My Website\r\n        </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport About from './About';\nimport Home from './Home';\nimport Contact from './Contact';\nimport Projects from './Projects';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      \n        <Navbar />\n        <Switch>\n          <Route path='/my-website' component={Home}/>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/projects\" component={Projects}/>\n          <Route path=\"/contact\" component={Contact}/>\n        </Switch>\n        <Footer />\n\n\n      </div> \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}